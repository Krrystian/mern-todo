{"ast":null,"code":"var _jsxFileName = \"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/ToDo.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCredentials, updateToken } from \"../state/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = () => {\n  _s();\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.user.token);\n  const showUser = async () => {\n    const response = await fetch(\"http://localhost:5000/verify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (response.status === 403) {\n      const refreshResponse = await fetch(\"http://localhost:5000/refresh\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        credentials: \"include\"\n      });\n      if (refreshResponse.ok) {\n        const data = await refreshResponse.json(); //DISPATCH NIE DZIALA\n        dispatch(updateToken({\n          token: data.token\n        }));\n      } else {\n        dispatch(setCredentials({\n          token: \"\",\n          email: \"\",\n          username: \"\"\n        }));\n      }\n    } else if (!response.ok) {\n      dispatch(setCredentials({\n        token: \"\",\n        email: \"\",\n        username: \"\"\n      }));\n    }\n  };\n  useEffect(() => {\n    showUser();\n    const intervalId = setInterval(showUser, 1000 * 10);\n    return () => clearInterval(intervalId);\n  }, []);\n  return token ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"You're here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 18\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"You're not here.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 44\n  }, this);\n};\n_s(ToDo, \"7YBb5M6ruQU4d08F1luSdbowvSQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setCredentials","updateToken","jsxDEV","_jsxDEV","ToDo","_s","dispatch","token","state","user","showUser","response","fetch","method","headers","Authorization","status","refreshResponse","credentials","ok","data","json","email","username","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/ToDo.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCredentials, updateToken } from \"../state/user\";\n\nconst ToDo = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state: any) => state.user.token);\n\n  const showUser = async () => {\n    const response = await fetch(\"http://localhost:5000/verify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (response.status === 403) {\n      const refreshResponse = await fetch(\"http://localhost:5000/refresh\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        credentials: \"include\",\n      });\n      if (refreshResponse.ok) {\n        const data = await refreshResponse.json(); //DISPATCH NIE DZIALA\n        dispatch(updateToken({ token: data.token }));\n      } else {\n        dispatch(setCredentials({ token: \"\", email: \"\", username: \"\" }));\n      }\n    } else if (!response.ok) {\n      dispatch(setCredentials({ token: \"\", email: \"\", username: \"\" }));\n    }\n  };\n\n  useEffect(() => {\n    showUser();\n    const intervalId = setInterval(showUser, 1000 * 10);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  return token ? <div>You're here.</div> : <div>You're not here.</div>;\n};\n\nexport default ToDo;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAAES,KAAU,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;EAE3D,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASR,KAAM;MACjC;IACF,CAAC,CAAC;IACF,IAAII,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,eAAe,GAAG,MAAML,KAAK,CAAC,+BAA+B,EAAE;QACnEC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASR,KAAM;QACjC,CAAC;QACDW,WAAW,EAAE;MACf,CAAC,CAAC;MACF,IAAID,eAAe,CAACE,EAAE,EAAE;QACtB,MAAMC,IAAI,GAAG,MAAMH,eAAe,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3Cf,QAAQ,CAACL,WAAW,CAAC;UAAEM,KAAK,EAAEa,IAAI,CAACb;QAAM,CAAC,CAAC,CAAC;MAC9C,CAAC,MAAM;QACLD,QAAQ,CAACN,cAAc,CAAC;UAAEO,KAAK,EAAE,EAAE;UAAEe,KAAK,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAC,CAAC,CAAC;MAClE;IACF,CAAC,MAAM,IAAI,CAACZ,QAAQ,CAACQ,EAAE,EAAE;MACvBb,QAAQ,CAACN,cAAc,CAAC;QAAEO,KAAK,EAAE,EAAE;QAAEe,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC,CAAC;IAClE;EACF,CAAC;EAED1B,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC,CAAC;IACV,MAAMc,UAAU,GAAGC,WAAW,CAACf,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAC;IACnD,OAAO,MAAMgB,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOjB,KAAK,gBAAGJ,OAAA;IAAAwB,QAAA,EAAK;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,gBAAG5B,OAAA;IAAAwB,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACtE,CAAC;AAAC1B,EAAA,CAvCID,IAAI;EAAA,QACSN,WAAW,EACdC,WAAW;AAAA;AAAAiC,EAAA,GAFrB5B,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}