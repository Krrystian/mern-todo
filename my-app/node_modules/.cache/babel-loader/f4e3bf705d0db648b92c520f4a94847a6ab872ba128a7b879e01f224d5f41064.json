{"ast":null,"code":"var _jsxFileName = \"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/todo-mern/my-app/src/index.tsx\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport modal from \"./state/index\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport { persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, modal);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n      }\n    });\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","modal","configureStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","jsxDEV","_jsxDEV","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/todo-mern/my-app/src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport modal from \"./state/index\";\n\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst persistConfig = { key: \"root\", storage, version: 1 };\n\nconst persistedReducer = persistReducer(persistConfig, modal);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    });\n  },\n});\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;AACpB,OAAOC,KAAK,MAAM,eAAe;AAEjC,SAA0BC,cAAc,QAAQ,kBAAkB;AAElE,SAEEC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,MAAMC,aAAa,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAEJ,OAAO;EAAEK,OAAO,EAAE;AAAE,CAAC;AAE1D,MAAMC,gBAAgB,GAAGb,cAAc,CAACU,aAAa,EAAEZ,KAAK,CAAC;AAC7D,MAAMgB,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAAK;IACpC,OAAOA,oBAAoB,CAAC;MAC1BC,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAAClB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;MACpE;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMc,IAAI,GAAGxB,QAAQ,CAACyB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACDH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACd,KAAK,CAAC8B,UAAU;EAAAC,QAAA,eACfjB,OAAA,CAACZ,GAAG;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}