[{"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/index.tsx":"1","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/App.tsx":"2","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/state/modal.tsx":"3","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/state/user.tsx":"4","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/Home.tsx":"5","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/ToDo.tsx":"6","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Navbar.tsx":"7","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Loading.tsx":"8","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Login.tsx":"9","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Register.tsx":"10","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TodoList.tsx":"11","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/modals/NewTodo.tsx":"12","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Input.tsx":"13","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TodoBar.tsx":"14","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TaskList.tsx":"15"},{"size":1279,"mtime":1698920103196,"results":"16","hashOfConfig":"17"},{"size":722,"mtime":1698967024206,"results":"18","hashOfConfig":"17"},{"size":801,"mtime":1699267116325,"results":"19","hashOfConfig":"17"},{"size":1268,"mtime":1699271711865,"results":"20","hashOfConfig":"17"},{"size":1275,"mtime":1699126042504,"results":"21","hashOfConfig":"17"},{"size":2091,"mtime":1699284007335,"results":"22","hashOfConfig":"17"},{"size":2782,"mtime":1699275081631,"results":"23","hashOfConfig":"17"},{"size":248,"mtime":1698342452532,"results":"24","hashOfConfig":"17"},{"size":2086,"mtime":1699277253762,"results":"25","hashOfConfig":"17"},{"size":2309,"mtime":1699125505251,"results":"26","hashOfConfig":"17"},{"size":4743,"mtime":1699279730442,"results":"27","hashOfConfig":"17"},{"size":2481,"mtime":1699266938381,"results":"28","hashOfConfig":"17"},{"size":1105,"mtime":1698342926220,"results":"29","hashOfConfig":"17"},{"size":1424,"mtime":1699274946166,"results":"30","hashOfConfig":"17"},{"size":389,"mtime":1699269514793,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1xqixa7",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"35"},"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/index.tsx",[],[],["82"],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/App.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/state/modal.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/state/user.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/Home.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/pages/ToDo.tsx",["83"],[],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setCredentials, updateToken } from \"../state/user\";\nimport Navbar from \"../components/Navbar\";\nimport TodoList from \"../components/TodoList\";\nimport NewTodo from \"../components/modals/NewTodo\";\nimport TodoBar from \"../components/TodoBar\";\nimport TaskList from \"../components/TaskList\";\n\nconst ToDo = () => {\n  const dispatch = useDispatch();\n  const token = useSelector((state: any) => state.user.token);\n  const newTodo = useSelector((state: any) => state.modal.newTodo.isOpen);\n  const header = {\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Credentials\": \"true\",\n    Authorization: `Bearer ${token}`,\n  };\n  const refreshAndDispatchToken = async () => {\n    await fetch(\"http://localhost:5000/refresh\", {\n      method: \"GET\",\n      headers: header,\n      credentials: \"include\",\n    }).then(async (res) => {\n      if (res.ok) {\n        const data = await res.json();\n        dispatch(updateToken({ token: data.token }));\n      } else {\n        dispatch(setCredentials({ token: \"\", email: \"\", username: \"\" }));\n      }\n    });\n  };\n\n  const isUser = async () => {\n    const response = await fetch(\"http://localhost:5000/verify\", {\n      method: \"POST\",\n      headers: header,\n      credentials: \"include\",\n    });\n    if (response.status === 403 || response.ok) {\n      await refreshAndDispatchToken();\n    } else if (!response.ok) {\n      //dispatch(setCredentials({ token: \"\", email: \"\", username: \"\" }));\n    }\n  };\n\n  useEffect(() => {\n    isUser();\n    const intervalId = setInterval(isUser, 1000 * 60 * 5);\n    return () => clearInterval(intervalId);\n  }, [token]);\n\n  return token ? (\n    <div className=\"overflow-hidden h-screen w-screen\">\n      {newTodo && <NewTodo />}\n      <Navbar />\n      <div className=\"flex w-full h-full\">\n        <TodoList />\n        <div className=\"flex flex-col w-full h-full\">\n          <TodoBar />\n          <TaskList />\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div>You're not here.</div>\n  );\n};\n\nexport default ToDo;\n",["84"],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Navbar.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Loading.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Login.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Register.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TodoList.tsx",["85","86"],[],"import { useDispatch, useSelector } from \"react-redux\";\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { GrClose } from \"react-icons/gr\";\nimport { newTodoClose, newTodoOpen } from \"../state/modal\";\nimport { useEffect, useState } from \"react\";\nimport { deleteTodo, setTodo, setTodos } from \"../state/user\";\n\nconst TodoList = () => {\n  const todos = useSelector((state: any) => state.user.todoList);\n  const token = useSelector((state: any) => state.user.token);\n  const user = useSelector((state: any) => state.user);\n  const [selected, setSelected] = useState<string>(\"\");\n  const dispatch = useDispatch();\n\n  const getTodos = async () => {\n    const repsonse = await fetch(\n      `http://localhost:5000/todo/getTodoList?id=${user.id}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    if (repsonse.ok) {\n      const data = await repsonse.json();\n      dispatch(setTodos(data));\n      dispatch(newTodoClose());\n    }\n  };\n  const isNotEmptyArray = (arr: any[]) => {\n    return Array.isArray(arr) && arr.length > 0;\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const handleNewTodo = () => {\n    dispatch(newTodoOpen());\n  };\n\n  const handleDelete = async (e: any, id: string) => {\n    e.stopPropagation();\n    const response = await fetch(\"http://localhost:5000/todo/removeTodoList\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ id: id }),\n    });\n    if (response.ok) {\n      const data = await response.json();\n      dispatch(deleteTodo(id));\n    }\n  };\n  return (\n    <div className=\"flex-col h-[94%] w-[30%] overflow-hidden hidden lg:flex\">\n      <div className=\"w-full flex justify-center border-r-4 border-green-700\">\n        <input\n          className=\"w-[90%] p-2 border-2 border-green-700 rounded-full placeholder:text-center my-6 text-center focus:outline-none\"\n          placeholder=\"Your todos\"\n        />\n      </div>\n\n      {isNotEmptyArray(todos) ? (\n        <div className=\"w-full h-full flex flex-col\">\n          {todos.map((todo: any) => {\n            const isSelected = selected === todo._id;\n            return (\n              <div\n                key={todo._id}\n                className={`flex justify-between p-3 cursor-pointer hover:bg-white hover:shadow-[0px_0px_5px_5px_#15803d] rounded-l-full transition-all duration-300 hover:z-20\n              ${\n                isSelected\n                  ? \" bg-white border-y-4 border-l-4 rounded-l-full border-green-700\"\n                  : \" border-r-4 border-green-700\"\n              }`}\n                onClick={() => {\n                  setSelected(todo._id);\n                  dispatch(setTodo(todo));\n                }}\n              >\n                <h2 className=\"text-center self-center text-2xl max-w-[40%] text-ellipsis whitespace-nowrap overflow-hidden\">\n                  {todo.title}\n                </h2>\n                <div className=\"text-sm xl:text-md\">\n                  <p>\n                    Completed {todo.completed.length} / &nbsp;\n                    {todo.completed.length + todo.uncompleted.length}\n                  </p>\n                  <p>\n                    Uncompleted: {todo.uncompleted.length} / &nbsp;\n                    {todo.completed.length + todo.uncompleted.length}\n                  </p>\n                </div>\n                <GrClose\n                  size={20}\n                  className=\"self-center cursor-pointer\"\n                  onClick={(e: any) => {\n                    handleDelete(e, todo._id);\n                  }}\n                />\n              </div>\n            );\n          })}\n          <div className=\"w-full h-full flex justify-center border-r-4 border-green-700\">\n            <button\n              className=\"flex m-3 bg-green-700 rounded-xl p-2 px-6 h-[40px] justify-center gap-1 transition-colors duration-300 hover:bg-green-600\"\n              onClick={handleNewTodo}\n            >\n              <AiOutlinePlus className=\"self-center\" />\n              Todo\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"w-full h-full flex justify-center items-center flex-col\">\n          <p className=\"lg:text-xl xl:text-3xl\">You don't have any todos</p>\n          <button\n            className=\"flex m-3 bg-green-700 rounded-xl p-2 px-6 justify-center gap-1 transition-colors duration-300 hover:bg-green-600\"\n            onClick={handleNewTodo}\n          >\n            <AiOutlinePlus className=\"self-center\" />\n            Todo\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TodoList;\n","/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/modals/NewTodo.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/Input.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TodoBar.tsx",[],[],"/Users/krystiancichorz/Dokumenty/PROGRAMOWANIE/WEB/mern-todo-together/my-app/src/components/TaskList.tsx",["87","88","89"],[],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nconst TaskList = () => {\n  const completed = useSelector((state: any) => state.user.todo.completed);\n  const uncompleted = useSelector((state: any) => state.user.todo.uncompleted);\n  const inProgress = useSelector((state: any) => state.user.todo.inProgress);\n  return <div>TaskList</div>;\n};\n\nexport default TaskList;\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":51,"column":6,"nodeType":"94","endLine":51,"endColumn":13,"suggestions":"95"},{"ruleId":"90","replacedBy":"96"},{"ruleId":"92","severity":1,"message":"97","line":37,"column":6,"nodeType":"94","endLine":37,"endColumn":8,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":54,"column":13,"nodeType":"101","messageId":"102","endLine":54,"endColumn":17},{"ruleId":"99","severity":1,"message":"103","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":18},{"ruleId":"99","severity":1,"message":"104","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":20},{"ruleId":"99","severity":1,"message":"105","line":7,"column":9,"nodeType":"101","messageId":"102","endLine":7,"endColumn":19},"no-new-object",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isUser'. Either include it or remove the dependency array.","ArrayExpression",["107"],["106"],"React Hook useEffect has a missing dependency: 'getTodos'. Either include it or remove the dependency array.",["108"],"@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'completed' is assigned a value but never used.","'uncompleted' is assigned a value but never used.","'inProgress' is assigned a value but never used.","no-object-constructor",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [isUser, token]",{"range":"113","text":"114"},"Update the dependencies array to be: [getTodos]",{"range":"115","text":"116"},[1685,1692],"[isUser, token]",[1190,1192],"[getTodos]"]